{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const todolistSlice = createSlice({\n  // 切片的命名空间\n  name: \"todolist\",\n  // 初始化仓库数据\n  initialState: {\n    list: [{\n      content: \"学习 React\",\n      status: false\n    }, {\n      content: \"复习 Vue\",\n      status: false\n    }, {\n      content: \"玩游戏\",\n      status: false\n    }, {\n      content: \"听歌\",\n      status: false\n    }]\n  },\n  // reducers\n  reducers: {\n    /**\r\n     * \r\n     * @param {*} state 上一次的仓库数据\r\n     * @param {*} param1 传递过来的数据\r\n     */\n    add: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      // 允许你的直接修改 state\n      // 如果你去阅读 redux-toolkit 的源码\n      // 你会发现底层使用到了 immer.js 这个库\n      state.list.push({\n        content: payload,\n        status: false\n      });\n    },\n    del: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.list.splice(payload, 1);\n    },\n    change: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.list[payload].status = !state.list[payload].status;\n    }\n  }\n});\nexport const {\n  add,\n  del,\n  change\n} = todolistSlice.actions;\nexport default todolistSlice.reducer;","map":{"version":3,"names":["createSlice","todolistSlice","name","initialState","list","content","status","reducers","add","state","_ref","payload","push","del","_ref2","splice","change","_ref3","actions","reducer"],"sources":["D:/qd/learn/react/入门/my-app/src/redux/todolistSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todolistSlice = createSlice({\r\n  // 切片的命名空间\r\n  name: \"todolist\",\r\n  // 初始化仓库数据\r\n  initialState: {\r\n    list: [\r\n      {\r\n        content: \"学习 React\",\r\n        status: false,\r\n      },\r\n      {\r\n        content: \"复习 Vue\",\r\n        status: false,\r\n      },\r\n      {\r\n        content: \"玩游戏\",\r\n        status: false,\r\n      },\r\n      {\r\n        content: \"听歌\",\r\n        status: false,\r\n      },\r\n    ],\r\n  },\r\n  // reducers\r\n  reducers: {\r\n    /**\r\n     * \r\n     * @param {*} state 上一次的仓库数据\r\n     * @param {*} param1 传递过来的数据\r\n     */\r\n    add: (state, { payload }) => {\r\n        // 允许你的直接修改 state\r\n        // 如果你去阅读 redux-toolkit 的源码\r\n        // 你会发现底层使用到了 immer.js 这个库\r\n        state.list.push({\r\n            content: payload,\r\n            status: false,\r\n        })\r\n    },\r\n    del: (state, { payload }) => {\r\n        state.list.splice(payload, 1);\r\n    },\r\n    change: (state, { payload }) => {\r\n        state.list[payload].status = !state.list[payload].status;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {add,del,change} = todolistSlice.actions;\r\n\r\nexport default todolistSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;EACvC;EACAE,IAAI,EAAE,UAAU;EAChB;EACAC,YAAY,EAAE;IACZC,IAAI,EAAE,CACJ;MACEC,OAAO,EAAE,UAAU;MACnBC,MAAM,EAAE;IACV,CAAC,EACD;MACED,OAAO,EAAE,QAAQ;MACjBC,MAAM,EAAE;IACV,CAAC,EACD;MACED,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACV,CAAC,EACD;MACED,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC;EACD;EACAC,QAAQ,EAAE;IACR;AACJ;AACA;AACA;AACA;IACIC,GAAG,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACpB;MACA;MACA;MACAD,KAAK,CAACL,IAAI,CAACQ,IAAI,CAAC;QACZP,OAAO,EAAEM,OAAO;QAChBL,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC;IACDO,GAAG,EAAEA,CAACJ,KAAK,EAAAK,KAAA,KAAkB;MAAA,IAAhB;QAAEH;MAAQ,CAAC,GAAAG,KAAA;MACpBL,KAAK,CAACL,IAAI,CAACW,MAAM,CAACJ,OAAO,EAAE,CAAC,CAAC;IACjC,CAAC;IACDK,MAAM,EAAEA,CAACP,KAAK,EAAAQ,KAAA,KAAkB;MAAA,IAAhB;QAAEN;MAAQ,CAAC,GAAAM,KAAA;MACvBR,KAAK,CAACL,IAAI,CAACO,OAAO,CAAC,CAACL,MAAM,GAAG,CAACG,KAAK,CAACL,IAAI,CAACO,OAAO,CAAC,CAACL,MAAM;IAC5D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACE,GAAG;EAACK,GAAG;EAACG;AAAM,CAAC,GAAGf,aAAa,CAACiB,OAAO;AAErD,eAAejB,aAAa,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}